q
todos
exit
c
valores
n
propriedades
n
q
c
a
n
a
n
"#{propriedade}="
valor
q
propriedade
valor
q
a.nome
a.mnome
a
q
JSON.parse(re["nome"]) rescue re["nome"]
JSON.parse(re["nome"])
JSON.parse(re[propriedade])
re[propriedade]
propriedade
q
propriedades
q
(a.methods - Class.methods).map{|p| p.to_s }.select{|p| !p.include?("=") } rescue []
(a.methods - Class.methods).map{|p| p.to_s }
(a.methods - Class.methods).map{|p| p.to_s }.select{|p| !p.include?("=
   29:             ") }
propriedades
q
propriedades
propriedade
c
q
(a.methods - Class.methods).map{|p| p.to_s }.select{|p| !p.include?("=") }
(a.methods - Class.methods).map{|p| p.to_s }.select{|p| p.include?("=") }
(a.methods - Class.methods).map{|p| p.to_s }.find{|p| p.include?("=") }
(a.methods - Class.methods).map{|p| p.to_s }
(a.methods - Class.methods)
(a.methods - Class.methods)[2]
(a.methods - Class.methods)[1]
(a.methods - Class.methods).first
a.methods - Class.methods
a.
a.atributes
a.methods
a
c
"#{@klass.to_s.downcase}s"
@klass.to_s.downcase
@klass.to_s
"#{@klass.to_s.downcase}s"
@klass
exit
a.nome
a
a.nome = "teste"
a = Aluno.new
q
a.nome
a
a.nome = "teste"
a = Aluno.new
Aluno.new
Aluno
exit
y
q
File.dirname(File.expand_path($0))
File.expand_path($0)
"#{File.expand_path($0)}../db/#{nome_arquivo}.json"
exit
clientes
n
cliente["telefone"]
cliente["nome"]
cliente
c
cliente
clientes
n
exit
(200..299).include?(300)
(200..299).include?(200)
(200..299).class
(200..299)
exit
estrutura_sym[:nome]
estrutura_sym["nome"]
estrutura_sym[:nome]
estrutura_sym
estrutura
n
exit
estrutura["telefone"]
estrutura["nome"]
estrutura
n
q
y
q
y
q
"danilo".to_sym
"danilo".to_syn
"danilo".to_sys
exit
variavel
lista
n
lista
n
c
lista
n
l
lista
n
q
